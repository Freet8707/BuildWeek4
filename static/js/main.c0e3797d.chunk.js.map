{"version":3,"sources":["actions/actions.js","reducers/reducer.js","components/Login.js","components/LogInPage.js","components/SignUp.js","components/Weed.js","components/Carousel.js","components/Form.js","utils/PrivateRoute.js","components/NavHeader.js","components/LogOut.js","components/APITest.js","components/RecommendSave.js","components/GetUserRecommends.js","components/RecommendDisplay.js","App.js","serviceWorker.js","index.js"],"names":["exampleData","logOut","window","localStorage","clear","type","initialState","isPosting","isLoggingIn","token","successMessage","error","loggingSuccess","loggingError","userId","savingStatus","saveSuccessMessage","saveErrorMessage","recommendRetrieve","recommendSuccess","recommendError","deleteStart","deleteSuccess","deleteError","LogInPage","styled","div","initialValue","username","password","connect","state","logIn","creds","dispatch","axios","post","then","res","console","log","data","setItem","payload","catch","err","message","props","useState","formState","setFormState","push","useHistory","handleChange","e","target","name","value","onSubmit","preventDefault","htmlFor","id","placeholder","onChange","to","style","color","backgroundColor","padding","SignUpForm","makeUser","formData","setFormData","Weed","Container","Row","weed","map","Col","key","flavor","strain","description","Carousel","items","src","altText","caption","header","UncontrolledCarousel","Form","setData","blankValue","effect","setForm","inputChange","yup","shape","oneOf","persist","newFormData","className","sm","md","size","offset","response","PrivateRoute","Component","component","rest","render","getItem","Header","linkText","setLinkText","useEffect","alt","href","testData","APITest","saveRecommend","getRecommends","get","Recommendations","deleteRecommend","delete","length","rating","onClick","App","exact","path","RecommendDisplay","RecommendSave","GetUserRecommends","SignUp","LogOut","Boolean","location","hostname","match","store","createStore","action","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0e3797d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const POSTING_USER_CREDS = 'POSTING_USER_CREDS'\r\nexport const USER_CREATE_SUCCESS = 'USER_CREATE_SUCCESS'\r\nexport const USER_CREATE_ERROR = 'USER_CREATE_ERROR'\r\n\r\nexport const LOGGING_IN_STATUS = 'LOGGING_IN_STATUS'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nexport const LOGOUT_ACTION = 'LOGOUT_ACTION'\r\n\r\nexport const SAVE_INITIALIZE = 'SAVE_INITIALIZE'\r\nexport const SAVE_RECOMMEND_SUCCESS = 'SAVE_RECOMMEND_SUCCESS'\r\nexport const SAVE_RECOMMEND_FAILURE = 'SAVE_RECOMMEND_FAILURE' \r\n\r\nexport const GET_RECOMMEND_START = 'GET_RECOMMEND_START'\r\nexport const GET_RECOMMEND_SUCCESS = 'GET_RECOMMEND_SUCCESS'\r\nexport const GET_RECOMMEND_ERROR = 'GET_RECOMMEND_ERROR'\r\n\r\nexport const DELETE_RECOMMEND_START = 'DELETE_RECOMMEND_START'\r\nexport const DELETE_RECOMMEND_SUCCESS = 'DELETE_RECOMMEND_SUCCESS'\r\nexport const DELETE_RECOMMEND_FAIL = 'DELETE_RECOMMEND_FAIL'\r\n\r\nconst exampleData = {\r\n    \"description\": \"great medical marijuana\",\r\n    \"effect\": \"relief of pain-like symptoms\",\r\n    \"flavor\": \"citrus-like accents\",\r\n    \"rating\": \"7\",\r\n    \"type\": \"sativa-indica hybrid\",\r\n    \"strain\": \"JChan\"\r\n}\r\n\r\nexport const makeUser = (creds) => dispatch => {\r\n    console.log('in the makeUser function', creds)\r\n    dispatch({ type: POSTING_USER_CREDS });\r\n\r\n    axios.post('https://lambda-med4-api.herokuapp.com/users/register', creds)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        // window.localStorage.setItem('token', res.data.token)\r\n        dispatch({ type: USER_CREATE_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n        console.log('Error', err.message)\r\n        dispatch({ type: USER_CREATE_ERROR, payload: err.message })\r\n    })\r\n}\r\n\r\nexport const logIn = (creds) => dispatch => {\r\n\r\n    dispatch({ type: LOGGING_IN_STATUS })\r\n\r\n    axios.post(\"https://lambda-med4-api.herokuapp.com/users/login\", creds)\r\n    .then(res => {\r\n        console.log('action.js: logIn: success: ', res.data)\r\n        window.localStorage.setItem('token', res.data.token)\r\n        dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: LOGIN_ERROR, payload: err.message })\r\n    })\r\n}\r\n\r\nexport const logOut = () => {\r\n    window.localStorage.clear();\r\n    return {\r\n        type: LOGOUT_ACTION\r\n    }\r\n}\r\n\r\nexport const saveRecommend = (id) => dispatch => {\r\n    // console.log(data)\r\n    dispatch ({ type: SAVE_INITIALIZE })\r\n\r\n    axios.post(`https://lambda-med4-api.herokuapp.com/recommendations/${id}`, exampleData)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        dispatch({ type: SAVE_RECOMMEND_SUCCESS, payload: res.data.message })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: SAVE_RECOMMEND_FAILURE, payload: err.message })\r\n    })\r\n}\r\n\r\nexport const getRecommends = (id) => dispatch => {\r\n    dispatch({ type: GET_RECOMMEND_START })\r\n    \r\n    axios.get(`https://lambda-med4-api.herokuapp.com/recommendations/${id}`)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        dispatch({ type: GET_RECOMMEND_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: GET_RECOMMEND_ERROR })\r\n    })\r\n}\r\n\r\nexport const deleteRecommend = (id) => dispatch => {\r\n    dispatch({ type: DELETE_RECOMMEND_START })\r\n\r\n    axios.delete(`https://lambda-med4-api.herokuapp.com/recommendations/${id}`)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        dispatch({ type: DELETE_RECOMMEND_SUCCESS })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: DELETE_RECOMMEND_FAIL })   \r\n    })\r\n}","import { POSTING_USER_CREDS, USER_CREATE_SUCCESS, USER_CREATE_ERROR, LOGGING_IN_STATUS, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_ACTION, SAVE_INITIALIZE, SAVE_RECOMMEND_SUCCESS, SAVE_RECOMMEND_FAILURE, GET_RECOMMEND_START, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_ERROR, DELETE_RECOMMEND_START, DELETE_RECOMMEND_SUCCESS, DELETE_RECOMMEND_FAIL } from '../actions/actions'\r\n\r\nconst initialState = {\r\n    isPosting: false,\r\n    isLoggingIn: false,\r\n    token: '',\r\n    successMessage: '',\r\n    error: '',\r\n    loggingSuccess: '',\r\n    loggingError: '',\r\n    userId: 0,\r\n    savingStatus: false,\r\n    saveSuccessMessage: '',\r\n    saveErrorMessage: '',\r\n    recommendRetrieve: false,\r\n    recommendSuccess: [],\r\n    recommendError: '',\r\n    deleteStart: false,\r\n    deleteSuccess: '',\r\n    deleteError: ''\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case POSTING_USER_CREDS :\r\n            return {\r\n                ...state,\r\n                isPosting: true\r\n            }\r\n        case USER_CREATE_SUCCESS :\r\n            console.log(action.payload)\r\n            return {\r\n                    ...state,\r\n                    error: '',\r\n                    loggingSuccess: '',\r\n                    loggingError: '',\r\n                    successMessage: action.payload.message,\r\n                    isPosting: false\r\n                }\r\n        case USER_CREATE_ERROR :\r\n            return {\r\n                ...state,\r\n                successMessage: '',\r\n                loggingSuccess: '',\r\n                loggingError: '',\r\n                isPosting: false,\r\n                error: action.payload\r\n            }\r\n        case LOGGING_IN_STATUS :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n            }\r\n        case LOGIN_SUCCESS :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                successMessage: '',\r\n                error: '',\r\n                loggingSuccess: action.payload.message + ', Click Find Recommendations at the top of the page to Get Started !',\r\n                userId: action.payload.id,\r\n                token: action.payload.token,\r\n                loggingError: ''\r\n            }\r\n        case LOGIN_ERROR :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                successMessage: '',\r\n                error: '',\r\n                loggingSuccess: '',\r\n                loggingError: action.payload\r\n            }\r\n        case LOGOUT_ACTION :\r\n            return {\r\n                isPosting: false,\r\n                isLoggingIn: false,\r\n                token: '',\r\n                successMessage: '',\r\n                error: '',\r\n                loggingSuccess: '',\r\n                loggingError: '',\r\n                userId: 0,\r\n                savingStatus: false,\r\n                saveSuccessMessage: '',\r\n                saveErrorMessage: '',\r\n                recommendRetrieve: false,\r\n                recommendSuccess: [],\r\n                recommendError: '',\r\n                deleteStart: false,\r\n                deleteSuccess: '',\r\n                deleteError: ''\r\n            }\r\n        case SAVE_INITIALIZE : \r\n            return {\r\n                ...state,\r\n                savingStatus: true\r\n            }\r\n        case SAVE_RECOMMEND_SUCCESS :\r\n            return {\r\n                ...state,\r\n                savingStatus: false,\r\n                saveSuccessMessage: action.payload,\r\n                saveErrorMessage: ''\r\n            }\r\n        case SAVE_RECOMMEND_FAILURE :\r\n            return {\r\n                ...state,\r\n                savingStatus: false,\r\n                saveSuccessMessage: '',\r\n                saveErrorMessage: action.payload\r\n            }   \r\n        case GET_RECOMMEND_START :\r\n            return{\r\n                ...state,\r\n                recommendRetrieve: true\r\n            }      \r\n        case GET_RECOMMEND_SUCCESS : \r\n            return {\r\n                ...state,\r\n                recommendRetrieve: false,\r\n                recommendSuccess: action.payload,\r\n                recommendError: ''\r\n            }\r\n        case GET_RECOMMEND_ERROR :\r\n            return {\r\n                ...state,\r\n                recommendRetrieve: false,\r\n                recommendError: action.payload,\r\n                recommendSuccess: []\r\n            }\r\n        case DELETE_RECOMMEND_START :\r\n            return {\r\n                ...state,\r\n                deleteStart: true\r\n            }\r\n        case DELETE_RECOMMEND_SUCCESS :\r\n            return {\r\n                ...state,\r\n                recommendSuccess: [],\r\n                deleteStart: false\r\n            }\r\n        case DELETE_RECOMMEND_FAIL :\r\n            return {\r\n                ...state,\r\n                deleteStart: false\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst LogInPage = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n    border-radius: 10px;\r\n    background: #6ed36e;\r\n    display: flex;\r\n    flex-direction: column;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;  \r\n        input {\r\n            width: 70%;\r\n            margin: 0 15%;\r\n        }      \r\n        button {\r\n           width: 150px; \r\n           margin: 20px 0 0 0;\r\n        }\r\n        a button {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst initialValue = {\r\n    username: '',\r\n    password: ''\r\n}\r\n\r\nconst Login = (props) => {\r\n    const [formState, setFormState] = useState(initialValue)\r\n    const { push } = useHistory()\r\n\r\n    const handleChange = e => {\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // props.logIn({\r\n        //     \"username\": \"testuser01\",\r\n        //     \"password\": \"test0\"\r\n        // })\r\n        push('/user-form')\r\n        props.logIn(formState)\r\n        setFormState(initialValue)\r\n    }\r\n    \r\n    return(\r\n        <LogInPage>\r\n            <form onSubmit={handleSubmit} >\r\n                <legend>Enter Username (email) and Password</legend>\r\n                <label htmlFor='username' />Username :\r\n                    <input \r\n                        type='text'\r\n                        name='username'\r\n                        id='username'\r\n                        placeholder='Enter Email(Username)'\r\n                        value={formState.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                <label htmlFor='password' />Password :\r\n                    <input \r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        placeholder='Enter Password'\r\n                        value={formState.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                <button type='submit'>Log In</button>\r\n                <Link to='/sign-up'><button>sign up</button></Link>\r\n                {props.successMessage ? <p style={{color: 'darkgreen'}}>{props.successMessage}</p> : null}\r\n                {props.error ? <p style={{color: 'red'}}>{props.error}</p> : null}\r\n                {props.isLoggingIn ? <p style={{color: 'red'}}>Signing In...</p> : null}\r\n                {props.loggingSuccess ? <p style={{color: 'white', backgroundColor: 'darkgreen', padding: '0 10px'}}>{props.loggingSuccess}</p> : null}\r\n                {props.loggingError ? <p style={{color: 'red'}}>There was an error...{props.loggingError}</p> : null}\r\n            </form>\r\n        </LogInPage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        successMessage: state.successMessage,\r\n        error: state.error,\r\n        isLoggingIn: state.isLoggingIn,\r\n        loggingSuccess: state.loggingSuccess,\r\n        loggingError: state.loggingError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logIn })(Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Login from './Login'\r\n\r\nconst LogInPage = () => {\r\n    \r\n    return(\r\n        <>\r\n            <Login />\r\n            {/* <Link to='/api-test'><button>API Test</button></Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogInPage","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeUser } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst SignUpForm = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n    border-radius: 10px;\r\n    background: #6ed36e;\r\n    display: flex;\r\n    flex-direction: column;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;  \r\n        input {\r\n            width: 70%;\r\n            margin: 0 15%;\r\n        }      \r\n        button {\r\n        width: 150px; \r\n        margin: 20px 0 0 0;\r\n        }\r\n        a button {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SignUp = (props) => {\r\n    const { push } = useHistory()\r\n    const [formData, setFormData] = useState({\r\n        \"username\": \"\", \r\n        \"password\": \"\"\r\n    })\r\n\r\n    const handleChange = e => {\r\n        console.log(formData.username)\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(formData.username && formData.password){            \r\n            props.makeUser(formData)\r\n            return push('/')\r\n        }\r\n\r\n        return setFormData({\r\n            username: \"\",\r\n            password: \"\"\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <SignUpForm>\r\n            <form onSubmit={handleSubmit} >\r\n                <legend>Input New Username and Create a Password</legend>\r\n                <label htmlFor='username' />Enter Username: \r\n                <input\r\n                    type='text'\r\n                    name=\"username\"\r\n                    id='username'\r\n                    placeholder='Please Enter Your Email'\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor='password' />Enter Password: \r\n                <input\r\n                    type='password'\r\n                    name=\"password\"\r\n                    id='password'\r\n                    placeholder='Please Create a Password'\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n                {props.isPosting ? <p style={{color: 'red'}} >Signing Up...</p> : null}\r\n                {props.error ? <p style={{color: 'red'}} >unsuccessful post</p> : null}\r\n            </form>\r\n        </SignUpForm>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        isPosting: state.isPosting,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { makeUser })(SignUp)","import React from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst Weed = (props) => {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row>\r\n          <div>\r\n              {props.weed.map(weed => (\r\n              <Col>\r\n                  <div key={weed.id}>\r\n                    {console.log(weed.flavor[0])}\r\n                    {console.log(weed.strain[0])}\r\n                      <h2>{weed.strain[0]}</h2>\r\n                      <p>{weed.description[0]}</p>\r\n                  </div>\r\n              </Col>\r\n              ))}\r\n          </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Weed","import React from 'react';\r\nimport { UncontrolledCarousel } from 'reactstrap';\r\nconst Carousel = () => {\r\n     const items = [\r\n    {\r\n      src: 'https://medcabinet4.netlify.app/images/canna01_.jpg',\r\n      altText: 'Weed 1',\r\n      caption: \"OUR CABINET HAS IT ALL Find a strain that suits your perfect mood and favorite flavor. Browse all that the cannabis industry has to offer\",\r\n      header: 'Sour Diesal',\r\n      key: '1'\r\n    },\r\n    {\r\n      src: 'https://medcabinet4.netlify.app/images/injar02.jpg',\r\n      altText: 'AK-47',\r\n      caption: 'FILL UP YOUR CABINET FOR LATER',\r\n      header: 'AK 47',\r\n      key: '2'\r\n    },\r\n    {\r\n      src: 'https://images.unsplash.com/photo-1503262028195-93c528f03218?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\r\n      altText: 'OG',\r\n      caption: \"Sometime's it takes Sativa\",\r\n      header: 'OG',\r\n      key: '3'\r\n    }\r\n  ];\r\n  const thisExample = () => <UncontrolledCarousel items={items} />;\r\n  return (\r\n      <div>\r\n  {thisExample()}\r\n  </div>\r\n  )\r\n}\r\nexport default Carousel;","import React, {useState,useEffect} from \"react\";\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as yup from \"yup\";\r\nimport Weed from './Weed.js';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Carousel from './Carousel.js'\r\n\r\n//work around login to render form component \r\n//window.localStorage.setItem('token', '1234')\r\n\r\n//Form Function\r\nconst Form = () => {\r\n\r\n//setting a push method from the useHistory hook in order to return application to the main login (home) component\r\nconst { push } = useHistory()\r\n\r\nconst [data,setData] = useState([]);\r\n\r\n//blank state for the form data \r\nconst blankValue =  {\r\n    effect: \"\",\r\n    flavor:\"\"\r\n }\r\n //setting form state\r\nconst [formState,setForm] = useState(blankValue);\r\n\r\n//state for button\r\nconst [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n//state for errors \r\nconst [errors, setErrors] = useState({\r\n    effect: \"\",\r\n    flavor:\"\"\r\n})\r\n\r\n//setting up yup schema object \r\n\r\nconst dataSchema = yup.object().shape({\r\n    effect: yup.string().oneOf([\"Creative\",\"Focused\",\"Creative\"],\"Please select a desired effect\"),\r\n      flavor: yup.string().oneOf([\"Earthy\",\"Apple\"], \"Please select a desired Flavor\")\r\n  });\r\n\r\n//onChange function to watch for changes in form values \r\nconst inputChange = e => {\r\n    e.persist();\r\n    const newFormData = {\r\n        ...formState, [e.target.name] :  e.target.value\r\n    }\r\n    setForm(newFormData);\r\n}\r\n\r\n//validating that the form has inputs and setting errors with yup\r\n// const validateChange = (e) => {\r\n//     yup\r\n//       .reach(dataSchema, e.target.name)\r\n//       .validate(e.target.name === ? e.target.checked : e.target.value) \r\n//       .then((valid) => {\r\n//         setErrors({\r\n//           ...errors,\r\n//           [e.target.name]: \"\"\r\n//         });\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n\r\n//         // set error in state\r\n//         setErrors({\r\n//           ...errors,\r\n//           [e.target.name]: err.errors[0]\r\n//         });\r\n//       });\r\n//   };\r\n//submit function to record the data in a json structure with an api HLKs5e3\r\nconst formSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(formState);\r\n    axios.post(\"https://med-cab4.herokuapp.com/predict\",formState)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setData(response.data);\r\n              \r\n            setForm(blankValue);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n//use effect to make sure person provides an effect \r\n// useEffect(() => {\r\n//     axios.post(\"https://med-cab4.herokuapp.com/predict\")\r\n//     .then(res => {\r\n//         console.log(res.data)\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err)\r\n//     })\r\n\r\n// }, [formState]);\r\n\r\nreturn (\r\n    <div>\r\n        <Container>\r\n         <Row className = \"sizing\" >\r\n           <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Carousel/>\r\n           </Col>\r\n         </Row>\r\n         <form onSubmit = {formSubmit}>\r\n         <Row>\r\n             <Col>\r\n             <label htmlFor = \"effect\">\r\n                 Effect you're Looking for:\r\n                <select name =\"effect\" onChange = {inputChange} value= {formState.effect}>\r\n                    <option value = {null}></option>\r\n                    <option value = 'Energetic'>Energetic</option>\r\n                    <option value = \"Creative\">Creative</option>\r\n                    <option value = \"Focused\">Focused</option>\r\n                </select>\r\n             </label>\r\n             </Col>\r\n             <Col>\r\n             <label htmlFor = \"flavor\">\r\n                 Flavor you're Looking for:\r\n                <select name =\"flavor\" onChange = {inputChange} value= {formState.flavor}>\r\n                    <option value = {null}></option>\r\n                    <option value = \"Apple\">Apple</option>\r\n                    <option value = \"Earthy\">Earthy</option>\r\n                    <option value = \"Blueberry\">Blueberry</option>\r\n                </select>\r\n             </label>\r\n             </Col>\r\n             </Row>\r\n             <button className = \"Danger\"  type = \"submit\">Submit</button>\r\n         </form>\r\n         </Container>\r\n         <Container>\r\n         <Weed weed = {data} />\r\n         <Link to='/save-recommend'><button>Save Recommendation ?</button></Link>\r\n         <Link to='/get-recommend'><button>Get Recommendation(s) ?</button></Link>\r\n         </Container>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return <Route\r\n                {...rest}\r\n                render={() => {\r\n                    if(window.localStorage.getItem('token')){\r\n                        return <Component />\r\n                    }\r\n                    return <Redirect to='/' />\r\n                }}\r\n            />\r\n}\r\n\r\nexport default PrivateRoute","import React, { useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.div`\r\n    width: 100%;\r\n    height: 90px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 40px 10px 40px;\r\n    background: rgba(0, 100, 0, .2);\r\n    color: white;\r\n    span {\r\n        width: 50px;\r\n        height: 50px;\r\n        img {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n    div {\r\n        width: 50%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        a {\r\n            color: #007e00;\r\n            &:hover {\r\n                color: #04f204;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst NavHeader = (props) => {\r\n    const [linkText, setLinkText] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(props.token){\r\n            return setLinkText(\"Find Recommendations\")\r\n        }\r\n        return setLinkText('')\r\n    }, [props.token])\r\n\r\n    return (\r\n        <Header>\r\n            <span><img src='https://smallimg.pngkey.com/png/small/60-600941_cannabis-registration-green-medical-cross-logo.png' alt='medicinal marijuana cross' /></span>\r\n            <div>\r\n                <a href='https://medcabinet4.netlify.app/'>Marketing Page</a>\r\n                {/* <NavLink to='/API-test'>API Test</NavLink> */}\r\n                <NavLink to='/'>Login / SignUp</NavLink>\r\n                <NavLink to='/logout'>Log Out</NavLink>\r\n                <NavLink to='/user-form'>{linkText}</NavLink>\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logOut })(NavHeader)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { logOut } from '../actions/actions'\r\n\r\nconst LogOut = (props) => {\r\n    const { push } = useHistory()\r\n    \r\n    useEffect(() => {\r\n        props.logOut()\r\n        push('/')\r\n    }, [])\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default connect(null, { logOut })(LogOut)","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst testData = {\r\n    \"effect\": \"Creative\",\r\n    \"flavor\": \"Blueberry\"\r\n}\r\n\r\nconst APITest = () => {\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.post('https://med-cab4.herokuapp.com/predict', testData)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }, [])\r\n    \r\n    return(\r\n        <>\r\n            <p>inside of APITest</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default APITest","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { saveRecommend } from '../actions/actions'\r\n\r\nconst RecommendSave = (props) => {\r\n    // console.log(props.userId)\r\n    useEffect(() => {\r\n        props.saveRecommend(props.userId)\r\n    }, [])\r\n    return(\r\n        <>\r\n            <Redirect to='/user-form' />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ...state,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveRecommend })(RecommendSave)","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getRecommends } from '../actions/actions'\r\n\r\nconst GetUserRecommends = (props) => {\r\n    // console.log(props.userId)\r\n    useEffect(() => {\r\n        props.getRecommends(props.userId)\r\n    }, [])\r\n    return(\r\n        <>\r\n            <Redirect to='/recommend-display' />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ...state,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getRecommends })(GetUserRecommends)","import React, { useState, useEffect } from 'react'\r\n// import { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { deleteRecommend } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst Recommendations = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0 40px 30px;\r\n    border-radius: 10px;\r\n    background: #6ed36e;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    div {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n        span {\r\n            color: rgb(0, 100, 0);\r\n            font-weight: 800;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RecommendDisplay = (props) => {\r\n    console.log(props.recommendSuccess)\r\n    const [data, setData] = useState([])\r\n    // const { push } = useHistory()\r\n    \r\n    useEffect(() => {\r\n        if(props.recommendSuccess.length > 0){\r\n            return setData(props.recommendSuccess)\r\n        }\r\n        return setData([])\r\n    }, [props.recommendSuccess])\r\n    \r\n    // const { description, effect, flavor, rating, strain, type } = props.recommendSuccess[0]\r\n    return (\r\n        <Recommendations>\r\n            {props.recommendRetrieve ? <p style={{color: 'red'}}>Retrieving Recommendations...</p> : null}\r\n            {data.length > 0 ? \r\n            <div>\r\n                <h1>Your List of Recommendations : {console.log(data[0])}</h1>\r\n                <h3><span>Strain: </span> {data[0].strain}</h3>\r\n                <h3>{data[0].type}</h3>\r\n                <p><span>description: </span> {data[0].description}</p>\r\n                <p>{data[0].flavor}</p>\r\n                <p><span>effects: </span> {data[0].effect}</p>\r\n                <p><span>rating: </span> {data[0].rating}</p>\r\n                <button \r\n                    onClick={() => {\r\n                        props.deleteRecommend(data[0].id)}\r\n                    }>\r\n                    Delete Recommendation ?\r\n                </button>            \r\n            </div> :\r\n            <p style={{color: 'red'}}>Recommendation Deleted ! </p>}\r\n        </Recommendations>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        recommendRetrieve: state.recommendRetrieve,\r\n        recommendSuccess: state.recommendSuccess\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteRecommend })(RecommendDisplay)","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport LogInPage from './components/LogInPage'\nimport SignUp from './components/SignUp'\n\nimport Form from './components/Form'\nimport PrivateRoute from './utils/PrivateRoute'\nimport NavHeader from './components/NavHeader'\nimport LogOut from './components/LogOut'\nimport './App.css';\nimport APITest from './components/APITest';\nimport RecommendSave from './components/RecommendSave'\nimport GetUserRecommends from './components/GetUserRecommends'\nimport RecommendDisplay from './components/RecommendDisplay'\n\nfunction App() {\n  return (\n    <Router>\n      <NavHeader />\n      <div className=\"chilled\">\n        <Switch>\n          <PrivateRoute exact path='/user-form' component={Form} />\n          <PrivateRoute exact path='/recommend-display' component={RecommendDisplay} />\n          <Route path='/save-recommend' component={RecommendSave} />\n          <Route path='/get-recommend' component={GetUserRecommends} />\n          {/* <Route path='/APITest'>APITest</Route> */}\n          <Route path='/sign-up' component={SignUp} />\n          <Route path='/logout' component={LogOut} />\n          <Route path='/api-test' component={APITest} />\n          <Route exact path='/' component={LogInPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { reducer } from './reducers/reducer'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}